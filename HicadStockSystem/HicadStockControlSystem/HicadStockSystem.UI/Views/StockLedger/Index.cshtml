@using HicadStockSystem.Core.Utilities;
@using Microsoft.AspNetCore.Http;
@using HicadStockSystem.UI.Models;
@model  ReportVM
@{
	ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
	int currentQty = 0;
	decimal? value = 0;
}




<div class="row">
	 <div class="col-md-12 grid-margin">
		  <div class="card">
			   <div class="card-body">

					<h1 style="text-align:center" class="text-center display-4">@Model.StkSystems.CompanyName</h1>
					<h3 style="text-align:center">@Model.StkSystems.CompanyAddress</h3>
 
					<br />
					<h3 style="text-align:center">REPORTS</h3>
					<h4 style="text-align:center">Stock Position</h4>
					<br /><br />
					<a class="btn btn-primary" asp-controller="ReceiptAnalysis" asp-action="PrintAnalysis">print</a>
					<div class="row">
						 <table class="table table-striped" style="text-align:center">
							  <tr  style="text-align:center">
							   <th>Item Code</th>
							   <th>Description</th>
							   <th>Date</th>
							   <th>Trans Number</th>
							   <th>Trans Qty</th>
							   <th>Tran Price</th>
							   <th>Stock Qty</th>
							   <th>Stock Price</th>
							   <th>Value</th>
							  @* <th>Price</th>
							   <th>Amount</th>*@
													@*<th>Discrepancy</th>*@
							  </tr>
								@foreach (var a in Model.StockLedgers)
								{
									 @*currentQty += a.TransQty;*@
								<tr style="text-align:center">
								   <td> @a.ItemCode</td>
								   <td> @a.ItemDesc </td>
								   <td> @a.TransDate</td>
								   <td> @a.TransactionNo </td>
								   <td> @a.TransQty</td>
								    <td>@Math.Round((decimal) a.Price,2)</td>
								    <td>
										@if (a.DocType.Equals("GR"))
										{
										  @(currentQty += a.TransQty)
									
										}else if(a.DocType.Equals("IS")){
											@(currentQty -= a.TransQty)
									}else if (a.DocType.Equals("RT"))
									{
										@(currentQty += a.TransQty)
									}
										@*@(currentQty += a.TransQty)*@
									</td>
									<td>@(Math.Round((decimal)((currentQty + (a.Price * a.TransQty))/a.TransQty),2))</td>
								   <td>
									@if (a.DocType.Equals("GR"))
									{
										@Math.Round((decimal)(value += (a.Price * a.TransQty)),2)
									}else if(a.DocType.Equals("IS")){
										@Math.Round((decimal)(value -= (a.Price * a.TransQty)),2)
									}else if (a.DocType.Equals("RT"))
									{
										@Math.Round((decimal)(value += (a.Price * a.TransQty)),2)
									}
			   
									</td>
								   @*<td> @a.Quantity</td>*@
								   @*<td>@Math.Round((decimal)(a.Price),2)</td>
								   <td>@Math.Round((decimal)(a.Amount),2)</td>*@
								   <td> </td>

								  </tr>


								}
							  <tr>	
									<td><span><b>Total</b></span></td><td></td><td></td><td></td>
									<td></td>
									<td></td>
									<td></td>
									@*<td style="text-align:center"><span><b>@Math.Round((decimal)Model.Receipts.ToList().Sum(x=>x.Amount),2)</b></span></td>*@
							 </tr>
						 </table> <br />
						
	 
					</div>

				@*<h6 style="text-align:center">RETRICTED</h6>*@
			   </div>
		  </div>
	 </div>
</div>
